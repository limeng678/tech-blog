(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{283:function(e,t,o){"use strict";o.r(t);var _=o(0),a=Object(_.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"对象的增删查改"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#对象的增删查改"}},[e._v("#")]),e._v(" 对象的增删查改")]),e._v(" "),o("h2",{attrs:{id:"对象的声明"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#对象的声明"}},[e._v("#")]),e._v(" 对象的声明")]),e._v(" "),o("ol",[o("li",[o("code",[e._v("let obj = {a: 1}")])]),e._v(" "),o("li",[o("code",[e._v("let obj = new Object({a: 1})")])])]),e._v(" "),o("h2",{attrs:{id:"删除属性"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#删除属性"}},[e._v("#")]),e._v(" 删除属性")]),e._v(" "),o("p",[o("code",[e._v("delete obj.xxx")])]),e._v(" "),o("h2",{attrs:{id:"查看属性"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#查看属性"}},[e._v("#")]),e._v(" 查看属性")]),e._v(" "),o("ul",[o("li",[e._v("查看自身属性: "),o("code",[e._v("Object.keys(obj)")])]),e._v(" "),o("li",[e._v("自身+原型属性: "),o("code",[e._v("console.dir(obj)")])]),e._v(" "),o("li",[e._v("判断一个属性是自己的还是原型的: "),o("code",[e._v("obj.hasOwnProperty('xxx')")])])]),e._v(" "),o("p",[e._v("如何判断一个属性是否存在与这个对象里并且不是"),o("code",[e._v("undefined")]),e._v(": "),o("code",[e._v("xxx in obj && obj.xxx === undefined")])]),e._v(" "),o("h3",{attrs:{id:"name-in-obj-和-obj-hasownproperty-name-的区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#name-in-obj-和-obj-hasownproperty-name-的区别"}},[e._v("#")]),e._v(" "),o("code",[e._v("'name' in obj")]),e._v(" 和 "),o("code",[e._v("obj.hasOwnProperty('name')")]),e._v(" 的区别")]),e._v(" "),o("p",[o("code",[e._v("in")]),e._v("检测对象里的全部属性, 也就是包括了原型属性, 而"),o("code",[e._v("hasOwnProperty")]),e._v("只包含检测对象里的属性, 不包含原型属性.")]),e._v(" "),o("h2",{attrs:{id:"修改和增加属性"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#修改和增加属性"}},[e._v("#")]),e._v(" 修改和增加属性")]),e._v(" "),o("ul",[o("li",[e._v("增加属性: "),o("code",[e._v("obj.yyy = '123")])]),e._v(" "),o("li",[e._v("批量赋值: "),o("code",[e._v("Object.assign(obj, {p1:1, p2:2, p3:3}")])]),e._v(" "),o("li",[e._v("修改原型: "),o("code",[e._v("let obj = Object.create(prototype)")]),e._v(", "),o("code",[e._v("prototype")]),e._v("是一个对象, 它指定了"),o("code",[e._v("obj")]),e._v("的"),o("code",[e._v("__proto__")]),e._v("是其本身.")])])])}),[],!1,null,null,null);t.default=a.exports}}]);