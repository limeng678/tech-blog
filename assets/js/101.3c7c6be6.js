(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{344:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"文档初探-十二-自定义指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档初探-十二-自定义指令"}},[t._v("#")]),t._v(" 文档初探(十二): 自定义指令")]),t._v(" "),a("p",[t._v("Vue 提供了"),a("code",[t._v("v-on")]),t._v(", "),a("code",[t._v("v-bind")]),t._v("等指令给我们使用, 同时也提供了自定义指令的功能.")]),t._v(" "),a("p",[t._v("下面实现一个页面加载后自动对输入框 focus 的功能")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局注册")]),t._v("\nVue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("directive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"focus"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("inserted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#app"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n    <input v-focus/> //绑定元素\n  ")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 局部注册")]),t._v("\ndirectives"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("inserted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br")])]),a("h2",{attrs:{id:"钩子函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#钩子函数"}},[t._v("#")]),t._v(" 钩子函数")]),t._v(" "),a("p",[t._v("指令里有几个钩子函数可以调用:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("bind")]),t._v(": 只调用一次, 当指令第一次绑定元素时才会调用.在这里可以做一些一次性的操作.")]),t._v(" "),a("li",[a("code",[t._v("inserted")]),t._v(": 在绑定元素插入到父节点的时候调用.")]),t._v(" "),a("li",[a("code",[t._v("update")]),t._v(": 在包含指令的组件的 VNode 更新时,"),a("strong",[t._v("但又在包含指令的组件的子组件更新之前调用")]),t._v(". 这个指令的值可能会也可能不会改变, 所以你可以跳过不必要的更新, 通过对比绑定的当前值与之前的值是否有差异(下面会介绍到).")]),t._v(" "),a("li",[a("code",[t._v("componentUpdated")]),t._v(": 在包含指令的组件的 VNode"),a("strong",[t._v("以及其子组件都更新")]),t._v("后调用.")]),t._v(" "),a("li",[a("code",[t._v("unbind")]),t._v(": 只调用一次, 当指令解绑时调用.")])]),t._v(" "),a("h2",{attrs:{id:"钩子函数的参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#钩子函数的参数"}},[t._v("#")]),t._v(" 钩子函数的参数")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("el")]),t._v(": 指绑定指令的元素, 可以用它直接操作 DOM.")]),t._v(" "),a("li",[a("code",[t._v("binding")]),t._v(": 包含以下属性的对象:\n"),a("ul",[a("li",[a("code",[t._v("name")]),t._v(": 指令的名字, 没有"),a("code",[t._v("v-")]),t._v("前缀.")]),t._v(" "),a("li",[a("code",[t._v("value")]),t._v(": 传递给指令的值.比如"),a("code",[t._v('v-x="1+1"')]),t._v(", 那么"),a("code",[t._v("value")]),t._v("的值是"),a("code",[t._v("2")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("oldValue")]),t._v(": 之前的"),a("code",[t._v("value")]),t._v(", 只能在"),a("code",[t._v("update")]),t._v("和"),a("code",[t._v("componentUpdate")]),t._v("两个钩子里使用.无论"),a("code",[t._v("value")]),t._v("是否改变都可以使用.")]),t._v(" "),a("li",[a("code",[t._v("expression")]),t._v(": 上面举例"),a("code",[t._v("value")]),t._v("里的"),a("code",[t._v("1+1")]),t._v("就是一个表达式.")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(": 传递给指令的参数. 如"),a("code",[t._v("v-y:foo")]),t._v(", "),a("code",[t._v("arg")]),t._v("就是"),a("code",[t._v("foo")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("modifiers")]),t._v(": 包含修饰符的对象, 如果存在.比如"),a("code",[t._v("v-z:foo.bar")]),t._v(", 那么修饰符对象就是"),a("code",[t._v("{foo: true, bar: true}")])])])]),t._v(" "),a("li",[a("code",[t._v("vnode")]),t._v(": 由 Vue 的编译器生成的虚拟节点.")]),t._v(" "),a("li",[a("code",[t._v("oldVnode")]),t._v(": 之前的"),a("code",[t._v("vnode")]),t._v(", 只能在"),a("code",[t._v("update")]),t._v("和"),a("code",[t._v("componentUpdate")]),t._v("两个钩子里使用.")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("除了"),a("code",[t._v("el")]),t._v("之外, 其他参数都应当作为只读且不可修改的.")])]),t._v(" "),a("h2",{attrs:{id:"动态指令参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态指令参数"}},[t._v("#")]),t._v(" 动态指令参数")]),t._v(" "),a("p",[t._v("指令参数可以是动态的, 可以写成这种形式:"),a("code",[t._v("v-n:[arguments]=value")]),t._v(". "),a("code",[t._v("argument")]),t._v("可以根据"),a("code",[t._v("data")]),t._v("的属性动态地传入进组件实例.")])])}),[],!1,null,null,null);s.default=e.exports}}]);